q()
q()
install.packages("randomForest")
View(hospital)
hospital <- load("./hospital.Rdata")
hospital <- load("./hospital.Rdata")
hospital <- load("Hospital.Rdata")
hospital <- load("Hospital.RData")
hospital <- load("/Hospital.RData")
getwd()
hospital <- load("Hospital.RData")
hospital <- load("Hospital.RData")
load("C:/StudyLife/Columbia/STAT 5243/Project 2/Spring2018-Project2-Group8/output/Hospital.RData")
hospital <- load("Hospital.RData")
load("C:/StudyLife/Columbia/STAT 5243/Project 2/Spring2018-Project2-Group8/output/Hospital.RData")
hospital <- hospital
View(hospital)
library(randomForest)
library(ggplot2)
library(rpart)
#hospital <- hospital
set.seed(021818) #Create a random seed
test.i <- sample(1:nrow(hospital), .3*nrow(hospital), replace=FALSE) #Test set contains 30% of the total data
test.data <- hospital[test.i,]
train.data <- hospital[-test.i,]
library(randomForest)
library(ggplot2)
library(rpart)
#hospital <- hospital
set.seed(021818) #Create a random seed
test.i <- sample(1:nrow(hospital), .3*nrow(hospital), replace=FALSE) #Test set contains 30% of the total data
test.data <- hospital[test.i,]
train.data <- hospital[-test.i,]
rf_tune <- expand.grid(mtry=seq(1, 7, by = 1), ntree = seq(500, 3000, by = 500)) #Test every combinations of two variables. mtry considers the number of variables included for each tree.
rf_tune$accuracy <- numeric(nrow(rf_tune))
for(i in 1:nrow(rf_tune)){
our.rf <- randomForest(Hospital.overall.rating ~
Mortality.national.comparison  +
Safety.of.care.national.comparison +
Readmission.national.comparison +
Patient.experience.national.comparison +
Effectiveness.of.care.national.comparison +
Timeliness.of.care.national.comparison +
Efficient.use.of.medical.imaging.national.comparison +
payment, data=train.data, na.action = na.omit,
mtry=rf_tune$mtry[i],
ntree=rf_tune$ntree[i]) #mtry should be ~square root the number of predictors for classification and p/3 for regression
rf.preds <- predict(our.rf, test.data)
rf_tune$accuracy[i] <- mean(rf.preds == test.data$Hospital.overall.rating, na.rm = TRUE)
}
shiny::runApp('C:/StudyLife/Columbia/STAT 5243/Project 2/Spring2018-Project2-Group8/app')
rf_tune <- expand.grid(mtry=seq(1, 7, by = 1), ntree = seq(500, 3000, by = 500)) #Test every combinations of two variables. mtry considers the number of variables included for each tree.
rf_tune$accuracy <- numeric(nrow(rf_tune))
for(i in 1:nrow(rf_tune)){
our.rf <- randomForest(Hospital.overall.rating ~
Mortality.national.comparison  +
Safety.of.care.national.comparison +
Readmission.national.comparison +
Patient.experience.national.comparison +
Effectiveness.of.care.national.comparison +
Timeliness.of.care.national.comparison +
Efficient.use.of.medical.imaging.national.comparison +
payment, data=train.data, na.action = na.omit,
mtry=rf_tune$mtry[i],
ntree=rf_tune$ntree[i]) #mtry should be ~square root the number of predictors for classification and p/3 for regression
rf.preds <- predict(our.rf, test.data)
rf_tune$accuracy[i] <- mean(rf.preds == test.data$Hospital.overall.rating, na.rm = TRUE)
}
rf_tune <- expand.grid(mtry=seq(1, 7, by = 1), ntree = seq(500, 3000, by = 500)) #Test every combinations of two variables. mtry considers the number of variables included for each tree.
rf_tune$accuracy <- numeric(nrow(rf_tune))
for(i in 1:nrow(rf_tune)){
our.rf <- randomForest(Hospital.overall.rating ~
Mortality.national.comparison  +
Safety.of.care.national.comparison +
Readmission.national.comparison +
Patient.experience.national.comparison +
Effectiveness.of.care.national.comparison +
Timeliness.of.care.national.comparison +
Efficient.use.of.medical.imaging.national.comparison +
payment, data=train.data, na.action = na.omit,
mtry=rf_tune$mtry[i],
ntree=rf_tune$ntree[i]) #mtry should be ~square root the number of predictors for classification and p/3 for regression
rf.preds <- predict(our.rf, test.data)
rf_tune$accuracy[i] <- mean(rf.preds == test.data$Hospital.overall.rating, na.rm = TRUE)
}
runApp('C:/StudyLife/Columbia/STAT 5243/Past Project 2 Example/Spr2017-proj2-grp10/app')
runApp('C:/StudyLife/Columbia/STAT 5243/Project 2/Spring2018-Project2-Group8/app')
setwd("C:/StudyLife/Columbia/STAT 5243/Project 2/Spring2018-Project2-Group8/app")
runApp()
runApp('C:/StudyLife/Columbia/STAT 5243/Past Project 2 Example/Spr2017-proj2-grp10/app')
runApp()
runApp()
runApp('C:/StudyLife/Columbia/STAT 5243/Past Project 2 Example/Spr2017-proj2-grp10/app')
runApp()
runApp()
runApp()
runApp()
runApp('C:/StudyLife/Columbia/STAT 5243/Past Project 2 Example/Spr2017-proj2-grp10/app')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(hospital)
runApp()
load("C:/StudyLife/Columbia/STAT 5243/Project 2/Spring2018-Project2-Group8/app/hos.RData")
View(hos)
runApp()
View(hos)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
